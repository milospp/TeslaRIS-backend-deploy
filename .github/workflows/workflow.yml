name: TeslaRIS CI

on:
  push:
  pull_request:
    branches: [ "main" ]
    # Don't run if PR is only updating static documentation
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
        env:
          DB_PASSWORD: postgres
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: TeslaRISDB
        ports:
          - 5432:5432
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
        options: >-
          --name "elasticsearch"
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms1g -Xmx1g
          xpack.security.enabled: false
        ports:
          - 9200:9200
      minio:
        image: minio/minio
        env:
          MINIO_ACCESS_KEY: minio-access-key
          MINIO_SECRET_KEY: minio-secret-key
        ports:
          - 9000:9000
      mongo:
        image: mongo:7.0.2
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Install Elasticsearch plugin
        run: |
          #!/bin/bash
          docker ps
          docker exec elasticsearch bash -c "bin/elasticsearch-plugin install analysis-icu"
          docker restart elasticsearch

      - name: Run Tests
        run: mvn test -Dspring.profiles.active=test
        env:
          DB_PASSWORD: postgres

  analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven packages
        if: matrix.language == 'java'
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Initializes the CodeQL tools for scanning.
      # https://github.com/github/codeql-action
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      # Autobuild attempts to build any compiled languages
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # Perform GitHub Code Scanning.
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
  codestyle-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate Checkstyle Report
        run: mvn checkstyle:check -Dcheckstyle.config.location=checkstyle.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
