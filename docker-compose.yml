version: "3.7"
services:

  teslaris:
    container_name: teslaris-api
    build:
      context: .
      dockerfile: .docker/Dockerfile
    depends_on:
      - db
      - elasticsearch
      - kibana
      - minio
    environment:
      - API_PORT=8081
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - MINIO_HOST=minio
      - MINIO_BUCKET=teslaris-file-items
      - MINIO_ACCESS_KEY=ROOTUSER
      - MINIO_SECRET_KEY=CHANGEME123
    ports:
      - "8081:8081"
    networks:
      - teslaris-network

  db:
    image: postgres:14.1-alpine
    container_name: teslaris-postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_NAME=TeslaRISDB
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d/
    networks:
      - teslaris-network
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
    container_name: teslaris-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - teslaris-network
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.3
    container_name: teslaris-kibana
    ports:
      - "5601:5601"
    networks:
      - teslaris-network
    restart: always

  minio:
    image: quay.io/minio/minio
    ports:
      - 9000:9000
      - 9090:9090
    environment:
      - MINIO_ROOT_USER=ROOTUSER
      - MINIO_ROOT_PASSWORD=CHANGEME123
    command: server /data --console-address ":9090"
    volumes:
      - minio-data:/data
    restart: always
    networks:
      - teslaris-network

networks:
  teslaris-network:
    name: teslaris-network

volumes:
  db:
  scripts:
  minio-data:
